@using BlackJackClient.Models
@if (gameState != null)
{
    <div>
        @foreach (var player in gameState.Players)
        {
            <div>
                <h3>@player.Name</h3>
                <p>Score: @player.Score</p>
                <div class="cards">
                    @foreach (var card in player.Cards)
                    {
                        <CardComponent Card="card" />
                    }
                </div>
            </div>
        }

        @if (!gameState.IsGameOver && gameState.CurrentPlayer == playerName)
        {
            <button @onclick="() => MakeMove(hit)">Hit</button>
            <button @onclick="() => MakeMove(stand)">Stand</button>
        }
        @if (gameState.IsGameOver)
        {
            <button @onclick="()=> RestartGame()">Restart</button>
        }

    </div>
}
else
{
    <p>Waiting for game state...</p>
}

@code {
    [Parameter]
    public GameState gameState { get; set; }

    [Parameter]
    public string playerName { get; set; }

    [Parameter]
    public EventCallback<string> onPlayerMove { get; set; }

    string hit = new string("Hit");
    string stand = new("Stand");

    private async Task MakeMove(string action)
    {
        await onPlayerMove.InvokeAsync(action);
    }
}
